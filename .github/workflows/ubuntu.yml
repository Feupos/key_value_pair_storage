name: Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: .local

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - uses: actions/checkout@v2
      
    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: install dependencies
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      run: |
        wget -c 'http://sourceforge.net/projects/boost/files/boost/1.80.0/boost_1_80_0.tar.bz2/download'
        tar xf download
        cd boost_1_80_0
        ./bootstrap.sh
        sudo ./b2 install
        cd ..
        git clone https://github.com/google/googletest.git --branch release-1.10.0
        cd googletest
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME/.local" -Dgtest_force_shared_crt=1
        cmake --build build --config Release
        cmake --build build --target install --config Release
        git clone https://github.com/nlohmann/json.git --branch v3.11.2
        cd json
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME/.local"
        cmake --build build --config Release
        cmake --build build --target install --config Release

    - name: configure
      run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION -DKVPStorage_ENABLE_CODE_COVERAGE=1 -DKVPStorage_BUILD_EXECUTABLE=0
      
    - name: build
      run: cmake --build build --config $BUILD_TYPE -j4

    - name: run tests
      run: |
        cd build
        ctest -C $BUILD_TYPE -VV

    - name: Code coverage using Codecov 
      run: bash <(curl -s https://codecov.io/bash) 

    - name: install project
      run: cmake --build build --target install --config Release 

